Барање 1:  

- За да инсталираме Git на нашиот компјутер, потребно е да направиме download така што инсталираме exe file преку овој линк (https://git-scm.com/). 
- Следно за да креираме профил ќе можеме на github страната да креираме или со помош на git командата config, правиме конфигурација со помош на името и email-от.

Барање 2:

- git branch - m master main 
    Со помош на оваа команда ја бираме таа гранка која сакаме да и го смениме името во овој случај кажуваме гранката main го именуваме во master каде што се имплементира во -m.
- git push -u origin main
    Одкога успешнно ја сменивме гранката од main во master, правиме push за да можеме секогаш кога правиме remote repository да ја имаме гранката master по default наместо main.
- Исто така друг начин за тоа како можеме да го смениме името на гранката од main во master, кога ќе одиме на нашиот профил одиме Settings -> Repositorys и имаме поле каде што можеме таму да го смениме името на гранката.

Барање 3:

- Во нашиот GitHub профил, доколку сакаме да креираме remote repository, одиме во Create Repository каде што името на нашето repository го именувавме како "SI_2024_lab01_173246".

Барање 4:

- mkdir SI_2024_lab01_173246
  cd Si_2024_lab01_173246
  git init
- За да можеме воопшто да направиме локален репозиториум, прво креираме folder каде што е именувам како SI_2024_lab01_173246 меѓутоа тој не е сеуште локален репозиториум. За да го направиме како таков, прво влегуваме во папката со помош на cd и правиме git init.

Барање 5:

- git remote add origin https://github.com/JovanaKrstevska/SI_2024_lab01_173246.git
    За да можеме да го сврзиме нашиот локален репозиториум со remote репозиториум правиме remote add, origin претстаува името на remote репозиторум и на крај е адресата каде што кажуваме каде се наоѓа. 

Барање 6:

- echo "# Jovana Krstevska, 173246" >> README.md
  git add README.md
  git commit -m "Initial commit"
  git push -u origin master
   Со помош на командата echo креираме датотека каде што во наводниците пишуваме што да содржи тој документ. Потоа со помош на add го ставаме во staged за да можеме потоа со помош на commit да го пратиме во remote репозиториумот со порака "Initial commit". Како за крај правиме push origin на master гранката.

Барање 7:
- curl -o SILab1Main.java [address raw]
  Со помош на оваа команда креираме java file во нашиот локален репозиториум, каде што прво го именуваме како сакаме да го крстиме тој file и на крај ставиме raw адреса. Тоа кажува дека постои file во некој друг репозиториум и ја копираме само содржината што се наоѓа во тој file. Како за крај правиме commit и push со порака "Add starter code".

Барање 8:
- git push -all origin/git push -u origin master
  Правиме сихронизација на сите гранки што постојат за да се стават во remote репозиториумот

Барање 9:
- git checkout -b big1/big2
  Со помош на оваа команда креираме/отвараме нови гранки каде што после тоа со помош на командата checkout се движиме од гранката master до гранката bug1/bug2.

Барање 10:
- git checkout big1
  Со помош на оваа команда се префрлуваме од гранката master до гранката bug1.

Барање 11:
- git checkout bug1
  nano SILab1_1.java
   Прво влегуваме во гранката bug1, после тоа влегуваме во тој фајл. Од кога ќе направиме прмени кон тој фајл зачувуваме и потоа правиме commit.

Барање 12:
- git checkout bug2
   Влегување во таа гранка

Барање 13:
-  nano SILab1_2.java
    Прво влегуваме во гранката bug2, после тоа влегуваме во тој фајл. Од кога ќе направиме прмени кон тој фајл зачувуваме и потоа правиме commit.

Барање 14:
- git checkout bug1
  Повторно се движиме во гранката bug1

Барање 15:
- nano SILab1Main.java
  Влегуваме во овој фајл и правиме промена кај 16тиот ред. Правиме save и commit

Барање 16:
- git checkout bug2
   Се движиме кај гранката bug2

Барање 17:
- nano SILab1Main.java
  Вчегуваме повторно меѓутоа ќе смениме нешто друго на 16тиот ред. Треба да бидеме внимателни дека се наоѓаме во сосема друга гранка и предхониот пат што сменивме беше кај гранката bug1.

Барање 18:
- git push --all origin
   Правиме сихрнозицаија на сите гранки и на овој начин добиваме конфликт бидејќи на 16тиот ред кај двете гранки е различен

Барање 19:
- gut checkout master
  Се префрлуваме кај master

Барање 20:
- git merge bug1
  Спојување на гранката bug1 во гранката master

Barawe 21:
- git push --all origin
  Сихронизација на сите гранки

Барање 22:
- git checkout bug2
  Префрлување во гранката bug2

Барање 23:
- git rebase master
  nano SILab1Main.java
  git add SILab1Main.java
  git rebase --continue
   Правиме rebase спрема гранката master. Најпрво што правиме е влегуваме во фајлот SILab1Main.java и бришиме таму каде што има конфликт. Потоа правиме add и на крај продолжуваме бидејќи успешно го изрешивме конфликтот.

Барање 24:
- git checkout master
  Се префрлуваме кај master гранката

Барање 25:
- git merge bug2
  Праиме спојување повторно но само со bug2 и master гранките

Барање 26:
- git push --all origin
  Правиме сихронизација на сите гранки

Барање 27:
- git push --force --all origin
  Правиме force push за да може да се направи push се во remote репозиторито

Барање 28:
- touch logs.txt
  git log > logs.txt
  git add logs.txt 173246.txt
   Со ова креираме фајл logs.txt и со помоѓ на log автоматски става log команди.

Барање 29:
- git push --all origin
  Сихронизација на сите гранки